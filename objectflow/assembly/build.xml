<!--
 *
 * Daniel Stieger, modellwerkstatt.org
 * Autumn 2017
 *
 *
 * Build.xml: Build an osgi batch-job application
 *            with our moware stack
 *   
 
 set JAVA_HOME=c:\javaexe\MPS30\jre
 set PATH=%PATH%;c:\javaexe\ant_MPS25\bin;c:\PROGRA~2\WIXTOO~1.7\bin
 
 
 export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home
 export PATH=$PATH:/Users/danielstieger/javaexe/ant/bin
 
 
 *
 * Bundle-Name: spring-core 
 * Bundle-SymbolicName: org.springframework.bundle.spring.core 
 *
-->
 
<project name="OsigBatchJob" default="default">      

  <!-- **** app specific definitions **************************************************************** -->
  <property name="jobName"              value="OsgiBatchJob" />
  <property name="jobVersion"           value="1.0.0" />
  <property name="jobSymbolicName"      value="org.modellwerkstatt.objectflow.batchjob.OsgiBatchJobMainClass" /> 
  <property name="jobBundleActivator"   value="org.modellwerkstatt.objectflow.batchjob.OFXOSGIBatchJob" /> 
  <property name="jobConfig"            value="/Users/danielstieger/moware/objectflow/solutions/sandbox/classes_gen.xml" /> 
  
  
  <!-- **** build specific definitions ************************************************************** -->
  <property name="mpsHomeDir"            value="/Users/danielstieger/javaexe/MPS335" /> 
  <property name="mowarePluginHomeDir"   value="/Users/danielstieger/javaexe/MoPluginFake" />
  <property name="felixDir"              value="/Users/danielstieger/stuff/felix-framework-5.6.8" />
      
  <!-- **** solutions to incorporate in this build ************************************************** -->
  <property name="solultionSimpleGen"   value="/Users/danielstieger/moware/objectflow/solutions/sandbox/classes_gen" />



  <target name="default">
    <mkdir dir="work"/>
    <mkdir dir="work/lib"/>
    <copy todir="work/lib">
	  <fileset dir="${mowarePluginHomeDir}/languages/MoWareLangAndSolutions/" includes="org.modellwerkstatt.sandbox.jar" />
	  <fileset dir="${mowarePluginHomeDir}/languages/MoWareLangAndSolutions/" includes="org.modellwerkstatt.manmap.solution.jar" />
	  
      <fileset dir="${mowarePluginHomeDir}/jars/basis/" includes="*.jar" />      
      <fileset dir="${mpsHomeDir}/lib/" includes="mps-closures.jar" />
      <fileset dir="${mpsHomeDir}/lib/" includes="mps-collections.jar" />
    </copy>
    
    
    
    <mkdir dir="work"/>
    <copy todir="work">
      <fileset dir="${solultionSimpleGen}" />
    </copy>
      
    <mkdir dir="dist"/>  
    <jar jarfile="dist/${jobName}-${jobVersion}.jar" basedir="work" update="false" >
      <manifest>
        <attribute name="Bundle-Name" value="${jobName}"/>
        <!-- create version from settings files of job? or from setting itself? -->
    	<attribute name="Bundle-Version" value="${jobVersion}"/>
    	<attribute name="Bundle-SymbolicName" value="${jobSymbolicName}" />
    	<attribute name="Bundle-Activator" value="${jobBundleActivator}" />
    	<attribute name="Bundle-ClassPath" value=".,lib/org.springframework.asm-3.0.5.RELEASE.jar,lib/org.springframework.beans-3.0.5.RELEASE.jar,lib/org.springframework.context-3.0.5.RELEASE.jar,lib/org.springframework.core-3.0.5.RELEASE.jar,lib/org.springframework.expression-3.0.5.RELEASE.jar,lib/org.springframework.jdbc-3.0.5.RELEASE.jar,lib/org.springframework.transaction-3.0.5.RELEASE.jar,lib/org.springframework.aop-3.0.5.RELEASE.jar,lib/joda-time-2.1.jar,lib/commons-logging-1.2.jar,lib/slf4j-api-1.6.1.jar,lib/kafka-clients-0.10.2.0.jar,lib/mps-closures.jar,lib/mps-collections.jar,lib/org.modellwerkstatt.manmap.solution.jar,lib/org.modellwerkstatt.sandbox.jar" />
		<attribute name="Import-Package" value="org.osgi.framework,org.osgi.service.prefs,javax.management" />
		<attribute name="Job-Configuration-File" value="${jobConfig}" />
		
      </manifest>
    </jar>
  </target>
  
  <target name="clean" description="Delete old work and dist directories">
	<delete dir="work"/>
	<delete dir="dist"/>	
  </target>
  
  <target name="deploy" depends="default">
  	<copy todir="${felixDir}/jobs">
  		<fileset dir="dist" />
  	</copy>
  </target>
  
</project>


    

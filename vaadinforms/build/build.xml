<!--


 Build.xml for tomcat environment, vaadin applications
 daniel stieger, spring 2015, brighton

 
 
 
 set JAVA_HOME=c:\javaexe\MPS30\jre
 set PATH=%PATH%;c:\javaexe\ant_MPS25\bin;c:\PROGRA~2\WIXTOO~1.7\bin
 
 
 export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home
 export PATH=$PATH:/Users/danielstieger/javaexe/ant/bin
 export PATH=$PATH:/Users/danielstieger/javaexe/maven/bin
 
 
-->
 
<project name="VaadinApplication" default="default">      
  <echo>
    Run by : ${user.name}
    Java Home : ${java.home}
  </echo>

   <!-- **** build specific definitions ************************************************************** -->
  <property name="javawareHome"       value="/Users/danielstieger/javaware" /> 
  <property name="mpsHome"            value="/Users/danielstieger/javaexe/MPS323" /> 
  <property name="mowarePluginHome"   value="/Users/danielstieger/javaexe/MoPluginFake" />
  <property name="tomcatHome"         value="/Users/danielstieger/stuff/apache-tomcat-8.0.33" />
      
  <!-- **** app specific definitions **************************************************************** -->
  <property name="appName"            value="SimpleApplication" />
  <property name="appMainclass"       value="Simple.baseApp.SimpleApplication" />
  <property name="appConfiguration"   value="Simple/baseApp/VaadinConfig.xml" /> 
 
  <!-- **** solutions to incorporate in this build ************************************************** -->
  <property name="solSimpleGen"        value="${javawareHome}/simpleone/solutions/Simple/classes_gen" />



  <!-- ++++++++++++ Live moware plugin adoption +++++++++++++++++++++++++++++++++++++++++++++++++++++ -->   
  <target name="mowarePluginAdoption">
	<property name="mowareHome"    value="/Users/danielstieger/moware" />

    <jar destfile="${mowarePluginHome}/languages/MoWareLangAndSolutions/org.modellwerkstatt.sandbox.jar"
    	 basedir="${mowareHome}/objectflow/solutions/sandbox/classes_gen"/>
         
    <jar destfile="${mowarePluginHome}/languages/MoWareLangAndSolutions/org.modellwerkstatt.manmap.solution.jar" 
         basedir="${mowareHome}/manmap/solutions/org.modellwerkstatt.manmap.solution/classes_gen"/>
    
    <jar destfile="${mowarePluginHome}/languages/MoWareLangAndSolutions/org.modellwerkstatt.forms.jar" 
         basedir="${mowareHome}/forms/solutions/modellwerkstatt.forms.sandbox/classes_gen"/>
         
    <jar destfile="${mowarePluginHome}/languages/MoWareLangAndSolutions/org.modellwerkstatt.vaadinforms.jar" 
         basedir="${mowareHome}/vaadinforms/solutions/org.modellwerkstatt.vaadinforms/classes_gen"/>

    <jar destfile="${mowarePluginHome}/languages/MoWareLangAndSolutions/moware-vaadin-theme-1.0.jar" 
         basedir="${mowareHome}/vaadinforms/build/artefact/moware-theme"/>
         
    <copy file="${mowareHome}/vaadinforms/build/artefact/web.xml"
    	tofile="${mowarePluginHome}/artefacts/vaadin/web.xml" overwrite="yes">
    </copy>
         
  </target>
  <!-- ++++++++++++ Live moware plugin adoption +++++++++++++++++++++++++++++++++++++++++++++++++++++ -->  


  <target name="default" depends="mowarePluginAdoption">

    <mkdir dir="work"/>
    <mkdir dir="work/WEB-INF/lib"/>
    <copy todir="work/WEB-INF/lib">
	  <fileset dir="${mowarePluginHome}/languages/MoWareLangAndSolutions/" includes="org.modellwerkstatt.sandbox.jar" />
	  <fileset dir="${mowarePluginHome}/languages/MoWareLangAndSolutions/" includes="org.modellwerkstatt.manmap.solution.jar" />
	  <fileset dir="${mowarePluginHome}/languages/MoWareLangAndSolutions/" includes="org.modellwerkstatt.forms.jar" />
	  <fileset dir="${mowarePluginHome}/languages/MoWareLangAndSolutions/" includes="org.modellwerkstatt.vaadinforms.jar" />
	  <fileset dir="${mowarePluginHome}/languages/MoWareLangAndSolutions/" includes="moware-vaadin-theme-1.0.jar" />
    
      
      <fileset dir="${javawareHome}/HafinaBasis/jars" includes="*.jar" />
      <fileset dir="${mowarePluginHome}/jars/" includes="org.springframework*.jar" />
      <fileset dir="${mowarePluginHome}/jars/" includes="commons-logging*.jar" />
      
      <fileset dir="${mpsHome}/lib/" includes="mps-closures.jar" />
      <fileset dir="${mpsHome}/lib/" includes="mps-collections.jar" />
      <fileset dir="${mowarePluginHome}/jars/" includes="joda-time*.jar" />
      <fileset dir="${mowarePluginHome}/jars/zoo/" includes="zookeeper*.jar" />
      <fileset dir="${mowarePluginHome}/jars/zoo/" includes="slf4j-api*.jar" />
      
      <fileset dir="${mowarePluginHome}/jars/printing21/" includes="*.jar" />
      <fileset dir="${mowarePluginHome}/jars/vaadin/" includes="*.jar" />
    </copy>
    
    
    
    <mkdir dir="work/WEB-INF/classes"/>
    <copy todir="work/WEB-INF/classes">
      <fileset dir="${solSimpleGen}" />
    </copy>
    
    <copy file="${mowarePluginHome}/artefacts/vaadin/web.xml" tofile="work/WEB-INF/web.xml" filtering="yes" overwrite="yes">
      <filterchain>
          <tokenfilter>
              <replaceregex pattern="APPLICATION_FQNAME" replace="${appMainclass}"/>
              <replaceregex pattern="APPLICATION_CONFIG" replace="${appConfiguration}"/>
          </tokenfilter>
      </filterchain>
    </copy>
  
    <mkdir dir="dist"/>  
    <jar destfile="dist/${appName}.war" basedir="work" update="false">
      <manifest>
        <attribute name="Main-Class" value="${appMainclass}" />
        <attribute name="Version" value="99.99.99" />
      </manifest>
    </jar>

  </target>
  
  <target name="clean" description="Delete old work and dist directories">
	<delete dir="work"/>
  </target>
  
  <target name="redeploy" depends="default">
  	<copy todir="${tomcatHome}/webapps/${appName}">
  		<fileset dir="work" />
  	</copy>
  </target>
  
</project>